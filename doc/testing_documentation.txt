TESTING:
There are a series of tests that have been provided with this app in order to 
tests the various functionalities and the UI component of the app.

There are essentially two types of testing that have been performed
for this app:
- Unit Testing for computational classes using JUnit
- UI Component Testing for Activity Classes using Espresso

NOTE: There are a few classes that have not been testing. The reason could be the following:
- There are QR Code Scanning APIs used in the class 
- The functionality to be tested is hidden and does not provide getter or setter methods

As such, there may not be a need to test the external APIs used. However, the classes 
that use these specialized external APIs shall be tested extensively in further
prototypes as the functionality of the app starts nearing maturity.

UNIT TESTS:
1) class EventBriefTest
   The purpose of this class is to test the EventBrief.java class. This class 
   extensively tests various methods provided by EventBrief.java using different 
   Test Functions.

   Test Functions:
   a) TestGetSetName()
      This function tests the getter and setter methods for eventName attribute in EventBrief class

      TEST CASES: (eventName)
      - ""
      - "My Event"
      - "The Magic Show"
      - "Movie Night"
      - "."
      - "This is the Name of an Event with a very large Event name for testing purposes"
      - "\n\n"
      - "\t\t"
      - "\""
    b) TestGetSetEventDate()
       This function tests the getter and setter methods for eventDate attribute in EventBrief class

       TEST CASES: (eventDate)
       - ""
       - "mm/dd/yyyy"
       - "04/30/2023"
       - "30th April, 2024"
       - "30/04/2024"
       - "...."
       - "\n"
       - "\0"
    c) TestGetSetStartTime()
       This function tests the getter and setter methods for startTime attribute

       TEST CASES: (startTime)
       - ""
       - "6:30 PM"
       - "18:15"
       - "0945"
       - "\n"
       - "][[]"
    d) TestGetSetPosterURL()
       This function tests the getter and setter methods for PosterURL attribute

       TEST CASES: (PosterURL)
       - ""
       - "https//:www.myposter.com"
       - "https//:thisisposterurl.com"
       - "www.anotherposterurl.com"
       - "https//:www.\n.com"
       - "https//my\tposter.com"
    e) TestGetSetLocation()
       This function tests the getter and setter methods for Location attribute

       TEST CASES: (Location)
       - "99199 82nd Ave NW, \n Edmonton, Alberta T6G XXX"
       - "30042003 37th Ave NW, \n Edmonton, Alberta, \n T6G 4T0"
       - "CCIS 112th St NW, Edmonton, Alberta T6G XXX"
       - "here\nthere\neverywhere"
       - "7588920477756699\t?"

It is evident from the testing that EventBriefTest is NOT resposible to do checks
on value constraints for its attribute


2) class EventTest 
   This Test class aims to test the functionality of Event.java class. It makes use of
   member test function to test the various functions of Event.java class

   TEST FUNCTIONS:
   a) TestGetSetName()
      This funtion tests getter and setter methods for name attribute

      TEST CASES: (name)
      - ""
      - "My Event"
      - "The Magic Show"
      - "Movie Night"
      - "."
      - "This is the Name of an Event with a very large Event Name for testing purposes.";
      - "\n\n"
      - "\t\t"
      - "\""
    b) TestGetsetDate()
       This function tests getter and setter methods for date attribute

       TEST CASES: (date)
       - "mm/dd/yyyy"
       - "04/30/2024"
       - "30th April, 2024"
       - "30/04/2024"
       - "...."
       - "\n"
       - "\0"
    c) TestGetSetStartTime()
       This function tests getter ad setter method for startTime attribute

       TEST CASES: (startTime)
       - ""
       - "6:30 PM"
       - "18:15"
       - "0945"
       - "\n"
       - "][[]"
    d) TestGetSetPosterURL()
       This function tests getter and setter method for PosterURL attribute

       TEST CASES: (PosterURL)
       - ""
       - "https//:www.myposter.com"
       - "https//:www.thisposterurl.com"
       - "www.anotherposterurl.com"
       - "https//:www.\n.com"
       - "https//:my\tposter.com"
    e) TestGetSetLocation()
       This function tests getter and setter method for Location attribute

       TEST CASES: (location)
       - "99199 82nd Ave NW, \n Edmonton, Alberta T6G XXX"
       - "30042003 37th Ave NW, \n Edmonton, Alberta,\n T6G 4T0"
       - "CCIS 112th St NW, Edmonton, Alberta T6G XXX"
       - "here\nthere\neverywhere"
       - "7588920477756699"
    
3) class UserProfileTest
   This function aims to test the UserProfile.java class. It uses various
   test methods to test the functionality of the methods of UserProfile.java classs.

   TEST FUNCTIONS:
   a) TestGetSetUserName()
      This function tests the getter and setter methods for userName attribute

      TEST CASES: (userName)
      - "Chinmoy Sahoo"
      - "Colton Connick"
      - "Hunaid Khan"
      - "    "
      - "..\n"
    b) TestGetSetUserEmail()
       This function tests the getter and setter methods for userEmail attribute

       TEST CASES: (userEmail)
       - ""
       - "babawanga@seer.ca"
       - "studentlife@ualberta.ca"
       - "hightempemail@hotmail.com"
       - "\0null"
       - "404ErRoR"
    c) TestGetSetUserHomepage()
       This function tests the getter and setter methods for userHomepage attribute

       TEST CASES: (userHomepage)
       - ""
       - "www.mywebsite.com"
       - "www.websitenameofaverylongwebsite.com"
       - "https//:www.themagicshowhomepage.com"
       - "www.\nweirdsite\nwithnewlines\n.com"
       - "0000000000"
    d) TestGetSetUserMobile()
       This function tests the getter and setter methods of userMobile attribute

       TEST CASES: (userMobile)
       - ""
       - "911"
       - "8685831111"
       - "5429520335"
       - "nononononononono"
       - "...\t...\n.\0"
    e) TestGetSetUserDocID()
       This function tests the getter and setter methods of UserDocID attribute

       TEST CASES: (UserDocID)
       - "0IITbMWv8LUtw2NHW73gheodBd3"
       - "4YINbMWg8LRtg5NHR23gGeodBd3"
       - "8IMKmMTv3LUjw2NHY68gbeedBd6"
       - "00000000000\0\0"
       - "\n;;''"
    f) TestGetSetCurrentUserID()
       This function tests the getter and setter methods of CurrentUserID attribute

       TEST CASES:
       - "5GPKwMGg4FUyt9ULK73olyrhDVl1"
       - "2WPKwQTg4YUrt9ZMK99dntfhDVe6"
       - "7GXEfLTr3OIbh2URK22lagrrFVl1"
       - "\n       \n"
       - "-----------"



ANDROID UI TESTING:
1) class AddEventDetailActivityTest
   This class aims to test the UI component of the AddEventDetailsActiviy.java class
   It checks if the buttons provided in this activity are working as intended

   TEST FUNCTIONS:
   a) TestFillAndNext()
      This function fills out the details and clicks the next button and checks if the intended progression
      takes place
      
      STEPS:
      - Open app at AddEventDetailActivity context
      - Add Event Name and close software keyboard after
      - Add Event Day and close software keyboard after
      -  Add Event month and close software keyboard after
      - Add Event Year and close software keyboard after
      - Add Event From Hour and close software keyboard after
      - Add Event From Minutes and close software keyboard after
      - Add Event From AM or PM and close software keyboard after
      - Add Event To Hour and close software keyboard after
      - Add Event To Minute and close software keyboard after
      - Add Event To Am or PM and close software keyboard after
      - Add Event Description and close software keyboard after
      - Add Event Max Attendees and close software keyboard after
      -Click on next button
      - Check if the event address fill page comes up 

2) class AddEventLocationActivityTest
   This clas aims to test the UI component of the AddEventLocationActivity.java class
   It checks if the user can fill out information and move to the next activity

   TEST FUNCTIONS:
   a) TestFillAndNext()
      This function fill sout the details of location of the new event and clicks
      the next button and checks if the intended action takes place

      STEPS:
      - Open app at MainActivity context 
      - Click on the "Get Started" button
      - Click on the "Create Event" button
      - Click on the "Next Button"
      - Fill out Adress Line 1: "Test Addr Line 1" and close software keyboard
      - Fill out Adress Line 2: "Test Addr Line 2" and close software keyboard
      - Fill out Adress Line 3: "Test Addr Line 3" and close software keyboard
      - Fill out City: "Edmonton" and close software keyboard
      - Fill out stateProvince: "Alberta" and close software keyboard
      - Fill out Country: "Canada" and close software keyboard
      - Fill out Area Code: "T6G XXX" and close software keyboard
      - Click on the next button
      - Check if the intended action took place

3) class BrowseEvetnsActivityTest
   This class aims to test the UI component of the BrowseEventsActivity.java class
   It checks if the user can browse events that have been scheduled

   TEST FUNCTIONS:
   a) TestBrowseEvents()
      This function clicks on an element of ListView in BrowseEventsActivity and checks if it 
      

   STEPS:
   - Open app at mainActivity context
   - Click on "Get Started" Button
   - Click on "Browse Events" Button
   - Click on the First Event of the ListView
   - Check if ViewEventDetailsActivity(template not fully implemented) is displayed 

4) class DashboardActivityTest
   This class aims to test the UI component of the DashboardActivity.java class

   TEST FUNCTIONS:
   a) TestCreateEventButton()
      This function tests the UI functionality of the various buttons provided in DashboardActivity

      STEPS:
      - Open app in DashboardActivity context
      - Click on "Create Button" event
      - Check if Create Event Page was created and displayed

    b) TestBrowseEventsButton()
      This function tests the UI functionality of Browse Events Button

      STEPS:
      - Open app in DashboardActivity context
      - Click on the "Browse Events" Button
      - Check if Browse Events Page was created and displayed


5) class MainActivity
   This class aims to test the UI component of the MainActivity.java class

   TEST FUNCTIONS:
   a) TestCreateProfileButton()
      This function tests the UI functionality of the Create Profile button in MainActivity class

      STEPS:
      - Open app in MainActivity context
      - Click on "Create Profile" event
      - Check if Create Profile Page was created and displayed
      
    b) TestGetStartedButton()
      This function tests the UI functionality of Get Started Button in MainActivity

      STEPS:
      - Open app in MainActivity context
      - Click on the "Get Started" Button
      - Check if Get Started Page was created and displayed

6) class SaveUserProfileActivityTest
   This class aims to test the UI component of the SaveUserProfileActivity.java class

   TEST FUNCTIONS:
   a) TestProfileCreation()
      This function tests the UI funtcionality of SaveUserProfileActivity page

      STEPS:
      - Open app in MainActivity context
      - Click on the "Create Profile" button
      - Fill the name field: "Chinmoy" and close software keyboard
      - Fill the email field: "c@uab.ca" and close software keyboard
      - Fill the homepage field: "testpage.com" and close software keyboard
      - Fill the mobile number field: "0500000000" and close software keyboard
      - Click on the "Save Profile" Button

